"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "(pages-dir-browser)/./components/BattleEngine.jsx":
/*!*************************************!*\
  !*** ./components/BattleEngine.jsx ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ BattleEngine)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _Characters_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Characters.json */ \"(pages-dir-browser)/./components/Characters.json\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\nfunction BattleEngine(param) {\n    let { allowedTypes } = param;\n    _s();\n    const [left, setLeft] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [right, setRight] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [result, setResult] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [percent, setPercent] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [animating, setAnimating] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showingResult, setShowingResult] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const animIntervalRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const nextTimeoutRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // helper: set width (row) or height (column) percent with a transition\n    const setFlexPercent = (value)=>{\n        var _parentStyle_flexDirection;\n        const leftDiv = document.getElementById('LeftSide');\n        const rightDiv = document.getElementById('RightSide');\n        if (!leftDiv || !rightDiv) return;\n        const parent = leftDiv.parentElement;\n        const parentStyle = parent ? getComputedStyle(parent) : null;\n        const isColumn = parentStyle === null || parentStyle === void 0 ? void 0 : (_parentStyle_flexDirection = parentStyle.flexDirection) === null || _parentStyle_flexDirection === void 0 ? void 0 : _parentStyle_flexDirection.startsWith('column');\n        // smooth transition\n        const trans = 'width 220ms ease, height 220ms ease';\n        leftDiv.style.transition = trans;\n        rightDiv.style.transition = trans;\n        if (isColumn) {\n            // ensure parent has a fixed height so percentage heights compute correctly\n            if (parent) parent.style.height = parent.style.height || '100vh';\n            leftDiv.style.height = \"\".concat(value, \"%\");\n            rightDiv.style.height = \"\".concat(100 - value, \"%\");\n            // clear width since we are controlling height\n            leftDiv.style.width = '';\n            rightDiv.style.width = '';\n        } else {\n            // row layout -> control widths\n            leftDiv.style.width = \"\".concat(value, \"%\");\n            rightDiv.style.width = \"\".concat(100 - value, \"%\");\n            // clear height since we are controlling width\n            leftDiv.style.height = '';\n            rightDiv.style.height = '';\n            if (parent) parent.style.height = '';\n        }\n    };\n    // cleanup function to remove inline sizing and transitions\n    const clearInlineSizing = ()=>{\n        const leftDiv = document.getElementById('LeftSide');\n        const rightDiv = document.getElementById('RightSide');\n        const parent = leftDiv === null || leftDiv === void 0 ? void 0 : leftDiv.parentElement;\n        if (leftDiv) {\n            leftDiv.style.transition = '';\n            leftDiv.style.width = '';\n            leftDiv.style.height = '';\n        }\n        if (rightDiv) {\n            rightDiv.style.transition = '';\n            rightDiv.style.width = '';\n            rightDiv.style.height = '';\n        }\n        if (parent) {\n            parent.style.height = '';\n            parent.style.minHeight = '';\n        }\n    };\n    // pick two characters based on allowed types\n    const pickCharacters = ()=>{\n        const filtered = _Characters_json__WEBPACK_IMPORTED_MODULE_2__.filter((c)=>allowedTypes.has(c.type) || allowedTypes.has('Everything'));\n        if (filtered.length < 2) return;\n        let leftChar = filtered[Math.floor(Math.random() * filtered.length)];\n        let rightChar;\n        do {\n            rightChar = filtered[Math.floor(Math.random() * filtered.length)];\n        }while (rightChar.name === leftChar.name);\n        setLeft(leftChar);\n        setRight(rightChar);\n        setResult(null);\n        setPercent(0);\n        setShowingResult(false);\n        // small delay to ensure DOM nodes exist (BattleEngine can mount before page nodes)\n        setTimeout(()=>{\n            updateSide('LeftSide', leftChar);\n            updateSide('RightSide', rightChar);\n            // visual start 50/50\n            setFlexPercent(50);\n        }, 30);\n    };\n    // update the existing divs\n    const updateSide = (id, character)=>{\n        const container = document.getElementById(id);\n        if (!container) return;\n        // update image\n        const img = container.querySelector('img');\n        if (img) {\n            img.src = character.img || '/img/Placeholder.png';\n            img.onerror = ()=>{\n                console.error(\"Failed to load \".concat(character.name, \", using placeholder.\"));\n                img.src = '/img/Placeholder.png';\n            };\n        }\n        // update name\n        const nameEl = container.querySelector('p');\n        if (nameEl) nameEl.textContent = character.name || 'Loading...';\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"BattleEngine.useEffect\": ()=>{\n            pickCharacters();\n            // expose nextBattle for debugging/test from console\n            window.nextBattle = nextBattle;\n            return ({\n                \"BattleEngine.useEffect\": ()=>{\n                    try {\n                        delete window.nextBattle;\n                    } catch (e) {}\n                }\n            })[\"BattleEngine.useEffect\"];\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        }\n    }[\"BattleEngine.useEffect\"], [\n        allowedTypes\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"BattleEngine.useEffect\": ()=>{\n            // cleanup on unmount\n            return ({\n                \"BattleEngine.useEffect\": ()=>{\n                    if (animIntervalRef.current) clearInterval(animIntervalRef.current);\n                    if (nextTimeoutRef.current) clearTimeout(nextTimeoutRef.current);\n                    clearInlineSizing();\n                }\n            })[\"BattleEngine.useEffect\"];\n        }\n    }[\"BattleEngine.useEffect\"], []);\n    const calculatePercent = (a, b)=>{\n        const total = a + b;\n        return Math.max(2, Math.round(a / total * 100));\n    };\n    // nextBattle: animate back to 50/50 then load new pair\n    function nextBattle() {\n        var _parentStyle_flexDirection;\n        if (animIntervalRef.current) {\n            clearInterval(animIntervalRef.current);\n            animIntervalRef.current = null;\n        }\n        if (nextTimeoutRef.current) {\n            clearTimeout(nextTimeoutRef.current);\n            nextTimeoutRef.current = null;\n        }\n        const leftDiv = document.getElementById('LeftSide');\n        const parent = leftDiv === null || leftDiv === void 0 ? void 0 : leftDiv.parentElement;\n        const start = percent || (showingResult ? percent : 50);\n        const target = 50;\n        let current = start;\n        const step = 2; // percent per tick\n        setAnimating(true);\n        // ensure a height anchor for column layout\n        const parentStyle = parent ? getComputedStyle(parent) : null;\n        const isColumn = parentStyle === null || parentStyle === void 0 ? void 0 : (_parentStyle_flexDirection = parentStyle.flexDirection) === null || _parentStyle_flexDirection === void 0 ? void 0 : _parentStyle_flexDirection.startsWith('column');\n        if (isColumn && parent) parent.style.height = parent.style.height || '100vh';\n        animIntervalRef.current = setInterval(()=>{\n            if (Math.abs(current - target) <= step) {\n                current = target;\n                setPercent(current);\n                setFlexPercent(current);\n                clearInterval(animIntervalRef.current);\n                animIntervalRef.current = null;\n                // short pause then pick new characters\n                setTimeout(()=>{\n                    pickCharacters();\n                    setAnimating(false);\n                    setPercent(0);\n                    // restore responsiveness after small delay\n                    setTimeout(clearInlineSizing, 80);\n                }, 200);\n            } else {\n                current += current < target ? step : -step;\n                setPercent(current);\n                setFlexPercent(current);\n            }\n        }, 12);\n    }\n    const handlePick = (side)=>{\n        if (!left || !right) return;\n        // clear any pending nextBattle timeout while user picks\n        if (nextTimeoutRef.current) {\n            clearTimeout(nextTimeoutRef.current);\n            nextTimeoutRef.current = null;\n        }\n        if (animIntervalRef.current) {\n            clearInterval(animIntervalRef.current);\n            animIntervalRef.current = null;\n        }\n        const leftPower = left.powerlevel;\n        const rightPower = right.powerlevel;\n        const leftPercent = calculatePercent(leftPower, rightPower);\n        const rightPercent = 100 - leftPercent;\n        const winner = leftPower >= rightPower ? 'left' : 'right';\n        setResult(winner);\n        // animate percentage overlay AND main-axis sizing towards the result\n        let current = 50; // always start visual animation from 50/50\n        const target = side === 'left' ? leftPercent : rightPercent;\n        setAnimating(true);\n        animIntervalRef.current = setInterval(()=>{\n            if (current < target) {\n                current += 1;\n                setPercent(current);\n                const visualLeft = side === 'left' ? current : 100 - current;\n                setFlexPercent(visualLeft);\n            } else {\n                clearInterval(animIntervalRef.current);\n                animIntervalRef.current = null;\n                // Show final result and keep layout AT final percent for user to take in\n                setPercent(target);\n                setShowingResult(true);\n                setAnimating(false);\n                // schedule nextBattle after 10s\n                nextTimeoutRef.current = setTimeout(()=>{\n                    nextBattle();\n                }, 10000);\n            }\n        }, 10);\n        // call Death if picked weaker\n        if (side !== winner) {\n            if (typeof window.Death === 'function') window.Death();\n            console.log('You picked the weaker one!');\n        } else {\n            console.log('You won!');\n        }\n    };\n    // attach click handlers to the left/right divs\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"BattleEngine.useEffect\": ()=>{\n            const leftDiv = document.getElementById('LeftSide');\n            const rightDiv = document.getElementById('RightSide');\n            const leftClick = {\n                \"BattleEngine.useEffect.leftClick\": ()=>handlePick('left')\n            }[\"BattleEngine.useEffect.leftClick\"];\n            const rightClick = {\n                \"BattleEngine.useEffect.rightClick\": ()=>handlePick('right')\n            }[\"BattleEngine.useEffect.rightClick\"];\n            leftDiv === null || leftDiv === void 0 ? void 0 : leftDiv.addEventListener('click', leftClick);\n            rightDiv === null || rightDiv === void 0 ? void 0 : rightDiv.addEventListener('click', rightClick);\n            return ({\n                \"BattleEngine.useEffect\": ()=>{\n                    leftDiv === null || leftDiv === void 0 ? void 0 : leftDiv.removeEventListener('click', leftClick);\n                    rightDiv === null || rightDiv === void 0 ? void 0 : rightDiv.removeEventListener('click', rightClick);\n                }\n            })[\"BattleEngine.useEffect\"];\n        // left/right are dependencies so handlers update when characters change\n        }\n    }[\"BattleEngine.useEffect\"], [\n        left,\n        right\n    ]);\n    // show percent overlay while animating or when showing result\n    return animating || showingResult ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"absolute inset-0 flex items-center justify-center pointer-events-none z-50\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n            className: \"text-white text-3xl font-bold\",\n            children: [\n                percent,\n                \"%\"\n            ]\n        }, void 0, true, {\n            fileName: \"/home/mfrau/Desktop/WhoWouldWin/components/BattleEngine.jsx\",\n            lineNumber: 273,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/home/mfrau/Desktop/WhoWouldWin/components/BattleEngine.jsx\",\n        lineNumber: 272,\n        columnNumber: 5\n    }, this) : null;\n}\n_s(BattleEngine, \"GV1FSn5GxY8wDgde0P80WVnZgG4=\");\n_c = BattleEngine;\nvar _c;\n$RefreshReg$(_c, \"BattleEngine\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./components/BattleEngine.jsx\n"));

/***/ })

});